	PROGRAM FERMI
	IMPLICIT REAL*8(A-H,O-Z)

!	This program calculates <r**N> and isoscalar energy weighted sum rules
!	with respect to spherical or deformed mass densities. For <r**N> the
!	density could be the derivative of a Fermi density.
!	Written by M.N. Harakeh.

	COMMON R(3),AR(3),SR(3),L_MULT,AMASS,Z,A13,EPSILON
	COMMON /DEF/ BETA(3),LDFRM(3),VBETA,GAMMA,BETACOR,XK,BETA0_DEF,BETA3_DEF
	COMMON /INT/ DR,KR
	DIMENSION RN(3)
	CHARACTER DEF*1,KMD*2,OPER*2,SUM*1,TYPE(2)*7
	COMMON /DEFSR/ DEF
	DATA TYPE(1),TYPE(2) /'VOLUME ','SURFACE'/
	DATA LDFRM /2,4,6/

!	Read input parameters.

100	CALL CIOAX (' PR[oceed] or EX[it]:',KMD,'C',' ')
	IF(KMD.EQ.'EX')STOP
    	CALL CIOF  (' MASS OF THE NUCLEUS :',AMASS)
	CALL CIOWRT(' WOODS-SAXON POTENTIAL;  1=VOLUME   :')
	CALL CIOI  ('                         2=SURFACE  :',INX)
	WRITE(6,1)
1	FORMAT('  RADIUS AND DIFFUSENESS OF THE WOODS-SAXON OPTICAL MODEL POTENTIAL')
	CALL CIOF  (' RR/(A**1/3):',RR)
	CALL CIOF  (' AR:',ARR)
	CALL CIOF  (' MAXIMUM INTEGRATION RADIUS :',RMAX)
	CALL CIOF  (' INTEGRATION STEP :',DR)
	CALL CIOAX (' CALCULATE SU[m rule] OR RN[<r**n>]? :',OPER,'C',' ')
	IF(OPER.EQ.'RN') THEN
	  CALL CIOI  (' N = THE POWER OF THE RADIUS IN <R**N> :',N)
	ELSE
	  CALL CIOF  (' CHARGE OF THE NUCLEUS : ',Z)
	  CALL CIOI  (' L = SUM RULE MULTIPOLARITY : ',L_MULT)
	  CALL CIOWRT('CALCULATE SUM RULE W.R.T B[ernstein] DENSITY WITH')
	  CALL CIOWRT(' SCALED DEFORMATION PARAMETERS OR W.R.T. ENTERED')
	  CALL CIOAX (' VOLUME W[oods-saxon] PARAMETERS ? : ',SUM,'C',' ')
	  INX=1
	ENDIF
	KR=NINT(RMAX/DR)
	A13=AMASS**0.33333333
	R(1)=1.2*A13
	AR(1)=0.D0
	R(2)=RR*A13
	AR(2)=ARR
	R(3)= 1.115*A13-0.53/A13
	T=2.5D0
	IF(AMASS.EQ.16.)T=2.D0
	AR(3)=T/4.4

!	Deformation parameters to be read in case <r**N> is to be calculated
!	with respect to a deformed density.

	CALL CIOWRT('IS SUM RULE OR <R**N> TO BE CALCULATED WITH RESPECT')
	CALL CIOAX (' TO A DEFORMED VOLUME DENSITY (Y[es] or N[o]) :',DEF,'C',' ')
	IF(DEF.EQ.'Y') THEN
	  CALL CIOWRT('WARNING: Sum Rule or R**N will be calculated with')
	  CALL CIOWRT(' respect to a deformed VOLUME density')
	  CALL CIOWRT(' GROUND STATE DEFORMATIONS')
	  CALL CIOF  (' QUADRUPOLE DEFORMAtION;BETA2: ',BETA2_DEF)
	  CALL CIOF  (' HEXADECAPOLE DEFORMATION;BETA4:',BETA4_DEF)
	  CALL CIOF  (' 6thPOLE DEFORMATION;BETA6:',BETA6_DEF)
	  DEF_LEN2=BETA2_DEF*R(2)
	  DEF_LEN4=BETA4_DEF*R(2)
	  DEF_LEN6=BETA6_DEF*R(2)
	  BETA(1)=BETA2_DEF
	  BETA(2)=BETA4_DEF
	  BETA(3)=BETA6_DEF
	  INX=1
	ENDIF

	IF(OPER.EQ.'SU') THEN
	  IF(SUM.EQ.'B') THEN
	    RTEMP=R(2)
	    ARTEMP=AR(2)	
	    R(2)=R(3)
	    AR(2)=AR(3)
	    IF(DEF.EQ.'Y') THEN
	      BETA(1)=DEF_LEN2/R(3)
	      BETA(2)=DEF_LEN4/R(3)
	      BETA(3)=DEF_LEN6/R(3)
	    ENDIF
	  ENDIF
	  CALL SUMRUL
	  IF(SUM.EQ.'B') THEN
	    R(2)=RTEMP
	    AR(2)=ARTEMP
	  ENDIF
	ENDIF

	WRITE(6,2)AMASS,Z
2	FORMAT('1','                 NUCLEUS',' MASS :',F8.1,',          CHARGE :',F8.1)
	WRITE(6,3)TYPE(INX),RR,ARR
3	FORMAT(/1X,A7,' WOODS-SAXON POTENTIAL PARAMETERS',' RR/(A**1/3) :',F8.3,' Fm,   AR :',F5.3,' Fm')

!	Write out some calculated parameters.

! 	WRITE(6,4) ((R(I),AR(I)),I=1,3),RMAX,DR
     WRITE(6,4) R(1),AR(1),R(2),AR(2),R(3),AR(3),RMAX,DR
4	FORMAT(//' SHAPE OF THE MASS DENSITY USED IN CALCULATING &
	THE TRANSITION RATES', &
	2      /27X,'RADIUS',10X,'DIFFUSENESS' &
	3      /28X,'(Fm)',14X,'(Fm)' &
	4      //' UNIFORM DENSITY',9X,F8.3,10X,F0.0 &
	5      /' WOODS-SAXON POTENTIAL',3X,F8.3,10X,F0.0 &
	6      /' BERNSTEIN MASS DENSITY',2X,F8.3,10X,F0.0 &
	7     //' MAX. INTEG. RADIUS :'4X,F8.3,'   INTEG. STEP :',F5.3)
	IF(DEF.EQ.'Y') THEN
	  WRITE(6,5)
5	  FORMAT(//' THE FOLLOWING RESULTS HAVE BEEN CALCULATED UNDER THE'&
	1     /' ASSUMPTION THAT ALL DEFORMATION PARAMETERS HAVE BEEN'&
	2     /' OBTAINED FROM DEFORMED TYPE FORM FACTORS')
	  WRITE(6,6)BETA2_DEF,BETA4_DEF,BETA6_DEF
6	  FORMAT(' QUADRUPOLE DEFORMATION :',F8.4,' HEXADECAPOLE DEFORMATI&
	1ON :',F8.4,' 6th POLE DEFORMATION :',F8.4)
	ENDIF
	IF(OPER.EQ.'SU') THEN
	  IF(SUM.EQ.'B') THEN
	    WRITE(6,7)2*L_TEMP,SR(2)
7	    FORMAT(/' ENERGY WEIGHTED SUM RULE (EWSR) :   MeV*e**2*Fm**',I2,&
	1     /' BERNSTEIN MASS DENSITY          :',E15.6)
	  ELSE
	    WRITE(6,8)2*L_TEMP,SR(2)
8	    FORMAT(/' ENERGY WEIGHTED SUM RULE (EWSR) :   MeV*e**2*Fm**',I2,&
	1     /' WOODS-SAXON MASS DENSITY        :',E15.6)
	  ENDIF
	ELSE
	  DO 9 I=1,3
	  RN(I)=0.D0
	  IF(DEF.NE.'Y') GO TO 10
	  BETA(1)=DEF_LEN2/R(I)
	  BETA(2)=DEF_LEN4/R(I)
	  BETA(3)=DEF_LEN6/R(I)
10	  CONTINUE
	  IF(INX.EQ.1) THEN
	    CALL RFERMI(R(I),AR(I),N,RN(I))
	  ELSE
	    CALL RFERMI(R(I),AR(I),N-1,RN_1)
	    CALL RFERMI(R(I),AR(I),-1 ,R_1)
	    RN(I)=(N+2)*RN_1/(2*R_1)
	  ENDIF
9	  CONTINUE
! 	WRITE(6,11) ((N,RN(I)),I=1,3)
    WRITE(6,11) N,RN(1),N,RN(2),N,RN(3)
11	FORMAT(1H0,' <R**',I2,'>-UNIF = ',F8.3,' <R**',I2,'>-FERMI = ',F&
	18.3,' <R**',I2,'>-BERN = ',F8.3)
	ENDIF
	DO 12 I=1,3
12	BETA(I) = 0.D0
	GOTO 100
	END
